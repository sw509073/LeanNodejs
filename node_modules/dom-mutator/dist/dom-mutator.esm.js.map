{"version":3,"file":"dom-mutator.esm.js","sources":["../src/index.ts"],"sourcesContent":["export const validAttributeName = /^[a-zA-Z:_][a-zA-Z0-9:_.-]*$/;\nconst nullController: MutationController = {\n  revert: () => {},\n};\n\nconst elements: Map<Element, ElementRecord> = new Map();\nconst mutations: Set<Mutation> = new Set();\n\nfunction getObserverInit(attr: string): MutationObserverInit {\n  return attr === 'html'\n    ? {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        characterData: true,\n      }\n    : {\n        childList: false,\n        subtree: false,\n        attributes: true,\n        attributeFilter: [attr],\n      };\n}\n\nfunction getElementRecord(element: Element): ElementRecord {\n  let record = elements.get(element);\n\n  if (!record) {\n    record = { element, attributes: {} };\n    elements.set(element, record);\n  }\n\n  return record;\n}\n\nfunction createElementPropertyRecord(\n  el: Element,\n  attr: string,\n  getCurrentValue: (el: Element) => any,\n  setValue: (el: Element, val: any) => void,\n  mutationRunner: (record: ElementPropertyRecord<any, any>) => void\n) {\n  const currentValue = getCurrentValue(el);\n  const record: ElementPropertyRecord<any, any> = {\n    isDirty: false,\n    originalValue: currentValue,\n    virtualValue: currentValue,\n    mutations: [],\n    el,\n    observer: new MutationObserver(() => {\n      const currentValue = getCurrentValue(el);\n      if (currentValue === record.virtualValue) return;\n      record.originalValue = currentValue;\n      mutationRunner(record);\n    }),\n    mutationRunner,\n    setValue,\n    getCurrentValue,\n  };\n  record.observer.observe(el, getObserverInit(attr));\n  return record;\n}\n\nfunction queueIfNeeded(\n  val: string | null,\n  record: ElementPropertyRecord<any, any>\n) {\n  const currentVal = record.getCurrentValue(record.el);\n  record.virtualValue = val;\n  if (val !== currentVal) {\n    record.isDirty = true;\n    queueDOMUpdates();\n  }\n}\n\nfunction htmlMutationRunner(record: HTMLRecord) {\n  let val = record.originalValue;\n  record.mutations.forEach(m => (val = m.mutate(val)));\n  queueIfNeeded(getTransformedHTML(val), record);\n}\nfunction classMutationRunner(record: ClassnameRecord) {\n  const val = new Set(record.originalValue.split(/\\s+/).filter(Boolean));\n  record.mutations.forEach(m => m.mutate(val));\n  queueIfNeeded(\n    Array.from(val)\n      .filter(Boolean)\n      .join(' '),\n    record\n  );\n}\nfunction attrMutationRunner(record: AttributeRecord) {\n  let val: string | null = record.originalValue;\n  record.mutations.forEach(m => (val = m.mutate(val)));\n  queueIfNeeded(val, record);\n}\n\nconst getHTMLValue = (el: Element) => el.innerHTML;\nconst setHTMLValue = (el: Element, value: string) => (el.innerHTML = value);\nfunction getElementHTMLRecord(element: Element): HTMLRecord {\n  const elementRecord = getElementRecord(element);\n  if (!elementRecord.html) {\n    elementRecord.html = createElementPropertyRecord(\n      element,\n      'html',\n      getHTMLValue,\n      setHTMLValue,\n      htmlMutationRunner\n    );\n  }\n  return elementRecord.html;\n}\n\nconst setClassValue = (el: Element, val: string) =>\n  val ? (el.className = val) : el.removeAttribute('class');\nconst getClassValue = (el: Element) => el.className;\nfunction getElementClassRecord(el: Element): ClassnameRecord {\n  const elementRecord = getElementRecord(el);\n  if (!elementRecord.classes) {\n    elementRecord.classes = createElementPropertyRecord(\n      el,\n      'class',\n      getClassValue,\n      setClassValue,\n      classMutationRunner\n    );\n  }\n  return elementRecord.classes;\n}\n\nconst getAttrValue = (attrName: string) => (el: Element) =>\n  el.getAttribute(attrName) ?? null;\nconst setAttrValue = (attrName: string) => (el: Element, val: string | null) =>\n  val !== null ? el.setAttribute(attrName, val) : el.removeAttribute(attrName);\nfunction getElementAttributeRecord(el: Element, attr: string): AttributeRecord {\n  const elementRecord = getElementRecord(el);\n  if (!elementRecord.attributes[attr]) {\n    elementRecord.attributes[attr] = createElementPropertyRecord(\n      el,\n      attr,\n      getAttrValue(attr),\n      setAttrValue(attr),\n      attrMutationRunner\n    );\n  }\n  return elementRecord.attributes[attr];\n}\n\nfunction deleteElementPropertyRecord(el: Element, attr: string) {\n  const element = elements.get(el);\n  if (!element) return;\n  if (attr === 'html') {\n    element.html?.observer?.disconnect();\n    delete element.html;\n  } else if (attr === 'class') {\n    element.classes?.observer?.disconnect();\n    delete element.classes;\n  } else {\n    element.attributes?.[attr]?.observer?.disconnect();\n    delete element.attributes[attr];\n  }\n}\n\nlet transformContainer: HTMLDivElement;\nfunction getTransformedHTML(html: string) {\n  if (!transformContainer) {\n    transformContainer = document.createElement('div');\n  }\n  transformContainer.innerHTML = html;\n  return transformContainer.innerHTML;\n}\n\nfunction setPropertyValue<T extends ElementPropertyRecord<any, any>>(\n  el: Element,\n  attr: string,\n  m: T\n) {\n  if (!m.isDirty) return;\n  m.isDirty = false;\n  const val = m.virtualValue;\n  if (!m.mutations.length) {\n    deleteElementPropertyRecord(el, attr);\n  }\n  m.setValue(el, val);\n}\n\nlet raf = false;\n\nfunction setValue(m: ElementRecord, el: Element) {\n  m.html && setPropertyValue<HTMLRecord>(el, 'html', m.html);\n  m.classes && setPropertyValue<ClassnameRecord>(el, 'class', m.classes);\n  Object.keys(m.attributes).forEach(attr => {\n    setPropertyValue<AttributeRecord>(el, attr, m.attributes[attr]);\n  });\n}\nfunction setValues() {\n  raf = false;\n  elements.forEach(setValue);\n}\nfunction queueDOMUpdates() {\n  if (!raf) {\n    raf = true;\n    requestAnimationFrame(setValues);\n  }\n}\n\n// find or create ElementPropertyRecord, add mutation to it, then run\nfunction startMutating(mutation: Mutation, element: Element) {\n  let record: ElementPropertyRecord<any, any> | null = null;\n  if (mutation.kind === 'html') {\n    record = getElementHTMLRecord(element);\n  } else if (mutation.kind === 'class') {\n    record = getElementClassRecord(element);\n  } else if (mutation.kind === 'attribute') {\n    record = getElementAttributeRecord(element, mutation.attribute);\n  }\n  if (!record) return;\n  record.mutations.push(mutation);\n  record.mutationRunner(record);\n}\n\n// get (existing) ElementPropertyRecord, remove mutation from it, then run\nfunction stopMutating(mutation: Mutation, el: Element) {\n  let record: ElementPropertyRecord<any, any> | null = null;\n  if (mutation.kind === 'html') {\n    record = getElementHTMLRecord(el);\n  } else if (mutation.kind === 'class') {\n    record = getElementClassRecord(el);\n  } else if (mutation.kind === 'attribute') {\n    record = getElementAttributeRecord(el, mutation.attribute);\n  }\n  if (!record) return;\n  const index = record.mutations.indexOf(mutation);\n  if (index !== -1) record.mutations.splice(index, 1);\n  record.mutationRunner(record);\n}\n\n// maintain list of elements associated with mutation\nfunction refreshElementsSet(mutation: Mutation) {\n  const existingElements = new Set(mutation.elements);\n  const newElements: Set<Element> = new Set();\n  const matchingElements = document.querySelectorAll(mutation.selector);\n\n  matchingElements.forEach(el => {\n    newElements.add(el);\n    if (!existingElements.has(el)) {\n      mutation.elements.add(el);\n      startMutating(mutation, el);\n    }\n  });\n\n  existingElements.forEach(el => {\n    if (!newElements.has(el)) {\n      mutation.elements.delete(el);\n      stopMutating(mutation, el);\n    }\n  });\n}\n\nfunction revertMutation(mutation: Mutation) {\n  mutation.elements.forEach(el => stopMutating(mutation, el));\n  mutation.elements.clear();\n  mutations.delete(mutation);\n}\n\nfunction refreshAllElementSets() {\n  mutations.forEach(refreshElementsSet);\n}\n\n// Observer for elements that don't exist in the DOM yet\nlet observer: MutationObserver;\nexport function disconnectGlobalObserver() {\n  observer && observer.disconnect();\n}\nexport function connectGlobalObserver() {\n  if (typeof document === 'undefined') return;\n\n  if (!observer) {\n    observer = new MutationObserver(() => {\n      refreshAllElementSets();\n    });\n  }\n\n  refreshAllElementSets();\n  observer.observe(document.documentElement, {\n    childList: true,\n    subtree: true,\n    attributes: false,\n    characterData: false,\n  });\n}\n\n// run on init\nconnectGlobalObserver();\n\nfunction newMutation(m: Mutation): MutationController {\n  // Not in a browser\n  if (typeof document === 'undefined') return nullController;\n  // add to global index of mutations\n  mutations.add(m);\n  // run refresh on init to establish list of elements associated w/ mutation\n  refreshElementsSet(m);\n  return {\n    revert: () => {\n      revertMutation(m);\n    },\n  };\n}\n\nfunction html(\n  selector: HTMLMutation['selector'],\n  mutate: HTMLMutation['mutate']\n) {\n  return newMutation({\n    kind: 'html',\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction classes(\n  selector: ClassnameMutation['selector'],\n  mutate: ClassnameMutation['mutate']\n) {\n  return newMutation({\n    kind: 'class',\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction attribute(\n  selector: AttrMutation['selector'],\n  attribute: AttrMutation['attribute'],\n  mutate: AttrMutation['mutate']\n) {\n  if (!validAttributeName.test(attribute)) return nullController;\n\n  if (attribute === 'class' || attribute === 'className') {\n    return classes(selector, classnames => {\n      const mutatedClassnames = mutate(Array.from(classnames).join(' '));\n      classnames.clear();\n      if (!mutatedClassnames) return;\n      mutatedClassnames\n        .split(/\\s+/g)\n        .filter(Boolean)\n        .forEach(c => classnames.add(c));\n    });\n  }\n\n  return newMutation({\n    kind: 'attribute',\n    attribute,\n    elements: new Set(),\n    mutate,\n    selector,\n  });\n}\n\nfunction declarative({\n  selector,\n  action,\n  value,\n  attribute: attr,\n}: DeclarativeMutation): MutationController {\n  if (attr === 'html') {\n    if (action === 'append') {\n      return html(selector, val => val + (value ?? ''));\n    } else if (action === 'set') {\n      return html(selector, () => value ?? '');\n    }\n  } else if (attr === 'class') {\n    if (action === 'append') {\n      return classes(selector, val => {\n        if (value) val.add(value);\n      });\n    } else if (action === 'remove') {\n      return classes(selector, val => {\n        if (value) val.delete(value);\n      });\n    } else if (action === 'set') {\n      return classes(selector, val => {\n        val.clear();\n        if (value) val.add(value);\n      });\n    }\n  } else {\n    if (action === 'append') {\n      return attribute(selector, attr, val =>\n        val !== null ? val + (value ?? '') : value ?? ''\n      );\n    } else if (action === 'set') {\n      return attribute(selector, attr, () => value ?? '');\n    } else if (action === 'remove') {\n      return attribute(selector, attr, () => null);\n    }\n  }\n  return nullController;\n}\n\nexport type MutationController = {\n  revert: () => void;\n};\n\nexport type DeclarativeMutation = {\n  selector: string;\n  attribute: string;\n  action: 'append' | 'set' | 'remove';\n  value?: string;\n};\n\nexport default {\n  html,\n  classes,\n  attribute,\n  declarative,\n};\n"],"names":["validAttributeName","nullController","revert","elements","Map","mutations","Set","getObserverInit","attr","childList","subtree","attributes","characterData","attributeFilter","getElementRecord","element","record","get","set","createElementPropertyRecord","el","getCurrentValue","setValue","mutationRunner","currentValue","isDirty","originalValue","virtualValue","observer","MutationObserver","observe","queueIfNeeded","val","currentVal","queueDOMUpdates","htmlMutationRunner","forEach","m","mutate","getTransformedHTML","classMutationRunner","split","filter","Boolean","Array","from","join","attrMutationRunner","getHTMLValue","innerHTML","setHTMLValue","value","getElementHTMLRecord","elementRecord","html","setClassValue","className","removeAttribute","getClassValue","getElementClassRecord","classes","getAttrValue","attrName","getAttribute","setAttrValue","setAttribute","getElementAttributeRecord","deleteElementPropertyRecord","disconnect","transformContainer","document","createElement","setPropertyValue","length","raf","Object","keys","setValues","requestAnimationFrame","startMutating","mutation","kind","attribute","push","stopMutating","index","indexOf","splice","refreshElementsSet","existingElements","newElements","matchingElements","querySelectorAll","selector","add","has","revertMutation","clear","refreshAllElementSets","disconnectGlobalObserver","connectGlobalObserver","documentElement","newMutation","test","classnames","mutatedClassnames","c","declarative","action"],"mappings":"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"}